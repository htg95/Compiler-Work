Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

  WHOLE PROGRAM (SAFE) [EITHER METHOD]: false
  WHOLE PROGRAM (SEEN) [TABLE METHOD]: true
  WHOLE PROGRAM (READ) [OBJECT READER METHOD]: false

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 0 (user-specified)
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000

In the inlining report below:
   "sz" refers to the "size" of the routine. The smaller a routine's size,
      the more likely it is to be inlined.
   "isz" refers to the "inlined size" of the routine. This is the amount
      the calling routine will grow if the called routine is inlined into it.
      The compiler generally limits the amount a routine can grow by having
      routines inlined into it.

Begin optimization report for: main()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (main()) [1/1=100.0%] ssymm_8192_16x16_malloc_pluto_init_comment.c(39,1)
  -> EXTERN: (48,1) printf(const char *__restrict__, ...)
  -> EXTERN: (51,20) malloc(size_t)
  -> EXTERN: (52,20) memalign(size_t, size_t)
  -> EXTERN: (58,20) malloc(size_t)
  -> EXTERN: (59,20) memalign(size_t, size_t)
  -> EXTERN: (64,21) malloc(size_t)
  -> EXTERN: (65,20) memalign(size_t, size_t)
  -> EXTERN: (71,1) printf(const char *__restrict__, ...)
  -> EXTERN: (95,19) floor(double)
  -> EXTERN: (95,19) floor(double)
  -> EXTERN: (96,21) floor(double)
  -> EXTERN: (96,21) floor(double)
  -> EXTERN: (97,23) floor(double)
  -> EXTERN: (97,23) floor(double)
  -> EXTERN: (109,17) floor(double)
  -> EXTERN: (109,17) floor(double)
  -> EXTERN: (110,19) floor(double)
  -> EXTERN: (110,19) floor(double)
  -> EXTERN: (123,19) floor(double)
  -> EXTERN: (123,19) floor(double)
  -> EXTERN: (124,21) floor(double)
  -> EXTERN: (124,21) floor(double)
  -> EXTERN: (125,24) floor(double)
  -> EXTERN: (125,24) floor(double)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at ssymm_8192_16x16_malloc_pluto_init_comment.c(53,1)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between a line 55 and a line 55
   remark #15346: vector dependence: assumed ANTI dependence between a line 55 and a line 55
   remark #25438: unrolled without remainder by 2  
LOOP END

LOOP BEGIN at ssymm_8192_16x16_malloc_pluto_init_comment.c(53,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25438: unrolled without remainder by 2  
LOOP END

LOOP BEGIN at ssymm_8192_16x16_malloc_pluto_init_comment.c(60,1)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between b line 62 and b line 62
   remark #15346: vector dependence: assumed ANTI dependence between b line 62 and b line 62
   remark #25438: unrolled without remainder by 2  
LOOP END

LOOP BEGIN at ssymm_8192_16x16_malloc_pluto_init_comment.c(60,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25438: unrolled without remainder by 2  
LOOP END

LOOP BEGIN at ssymm_8192_16x16_malloc_pluto_init_comment.c(66,1)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between c line 68 and c line 68
   remark #15346: vector dependence: assumed ANTI dependence between c line 68 and c line 68
   remark #25438: unrolled without remainder by 2  
LOOP END

LOOP BEGIN at ssymm_8192_16x16_malloc_pluto_init_comment.c(66,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25438: unrolled without remainder by 2  
LOOP END

LOOP BEGIN at ssymm_8192_16x16_malloc_pluto_init_comment.c(95,19)
   remark #15523: loop was not vectorized: loop control variable t2 was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at ssymm_8192_16x16_malloc_pluto_init_comment.c(96,21)
      remark #15523: loop was not vectorized: loop control variable t3 was found, but loop iteration count cannot be computed before executing the loop

      LOOP BEGIN at ssymm_8192_16x16_malloc_pluto_init_comment.c(97,49)
         remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form

         LOOP BEGIN at ssymm_8192_16x16_malloc_pluto_init_comment.c(98,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed OUTPUT dependence between c line 101 and c line 101
            remark #15346: vector dependence: assumed OUTPUT dependence between c line 101 and c line 101

            LOOP BEGIN at ssymm_8192_16x16_malloc_pluto_init_comment.c(99,13)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization
               remark #15346: vector dependence: assumed OUTPUT dependence between c line 101 and c line 101
               remark #15346: vector dependence: assumed OUTPUT dependence between c line 101 and c line 101

               LOOP BEGIN at ssymm_8192_16x16_malloc_pluto_init_comment.c(100,15)
                  remark #15310: loop was not vectorized: operation cannot be vectorized   [ ssymm_8192_16x16_malloc_pluto_init_comment.c(101,17) ]
                  remark #25439: unrolled with remainder by 2  
               LOOP END

               LOOP BEGIN at ssymm_8192_16x16_malloc_pluto_init_comment.c(100,15)
               <Remainder>
               LOOP END
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ssymm_8192_16x16_malloc_pluto_init_comment.c(109,17)
   remark #15523: loop was not vectorized: loop control variable t2 was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at ssymm_8192_16x16_malloc_pluto_init_comment.c(110,19)
      remark #15523: loop was not vectorized: loop control variable t3 was found, but loop iteration count cannot be computed before executing the loop

      LOOP BEGIN at ssymm_8192_16x16_malloc_pluto_init_comment.c(111,7)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between t4 line 111 and t4 line 117
         remark #15346: vector dependence: assumed ANTI dependence between t4 line 117 and t4 line 111
         remark #15346: vector dependence: assumed FLOW dependence between t4 line 111 and t4 line 117
         remark #15346: vector dependence: assumed ANTI dependence between t4 line 117 and t4 line 111
         remark #15346: vector dependence: assumed FLOW dependence between t4 line 111 and t4 line 117
         remark #15346: vector dependence: assumed ANTI dependence between t4 line 117 and t4 line 111
         remark #15346: vector dependence: assumed ANTI dependence between t4 line 117 and t4 line 111
         remark #15346: vector dependence: assumed FLOW dependence between t4 line 111 and t4 line 117
         remark #15346: vector dependence: assumed ANTI dependence between t4 line 117 and t4 line 111
         remark #15346: vector dependence: assumed FLOW dependence between t4 line 111 and t4 line 117
         remark #15346: vector dependence: assumed ANTI dependence between t4 line 117 and t4 line 111
         remark #15346: vector dependence: assumed FLOW dependence between t4 line 111 and t4 line 117

         LOOP BEGIN at ssymm_8192_16x16_malloc_pluto_init_comment.c(116,9)
            remark #15310: loop was not vectorized: operation cannot be vectorized   [ ssymm_8192_16x16_malloc_pluto_init_comment.c(117,11) ]
            remark #25439: unrolled with remainder by 4  
         LOOP END

         LOOP BEGIN at ssymm_8192_16x16_malloc_pluto_init_comment.c(116,9)
         <Remainder>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ssymm_8192_16x16_malloc_pluto_init_comment.c(123,19)
   remark #15523: loop was not vectorized: loop control variable t2 was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at ssymm_8192_16x16_malloc_pluto_init_comment.c(124,21)
      remark #15523: loop was not vectorized: loop control variable t3 was found, but loop iteration count cannot be computed before executing the loop

      LOOP BEGIN at ssymm_8192_16x16_malloc_pluto_init_comment.c(125,24)
         remark #15523: loop was not vectorized: loop control variable t4 was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ssymm_8192_16x16_malloc_pluto_init_comment.c(126,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed FLOW dependence between t5 line 126 and t5 line 133
            remark #15346: vector dependence: assumed ANTI dependence between t5 line 133 and t5 line 126
            remark #15346: vector dependence: assumed FLOW dependence between t5 line 126 and t5 line 133
            remark #15346: vector dependence: assumed ANTI dependence between t5 line 133 and t5 line 126
            remark #15346: vector dependence: assumed FLOW dependence between t5 line 126 and t5 line 133
            remark #15346: vector dependence: assumed ANTI dependence between t5 line 133 and t5 line 126
            remark #15346: vector dependence: assumed ANTI dependence between t5 line 133 and t5 line 126
            remark #15346: vector dependence: assumed FLOW dependence between t5 line 126 and t5 line 133
            remark #15346: vector dependence: assumed ANTI dependence between t5 line 133 and t5 line 126
            remark #15346: vector dependence: assumed FLOW dependence between t5 line 126 and t5 line 133
            remark #15346: vector dependence: assumed ANTI dependence between t5 line 133 and t5 line 126
            remark #15346: vector dependence: assumed FLOW dependence between t5 line 126 and t5 line 133

            LOOP BEGIN at ssymm_8192_16x16_malloc_pluto_init_comment.c(127,13)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization
               remark #15346: vector dependence: assumed OUTPUT dependence between c line 133 and c line 133
               remark #15346: vector dependence: assumed OUTPUT dependence between c line 133 and c line 133

               LOOP BEGIN at ssymm_8192_16x16_malloc_pluto_init_comment.c(132,15)
                  remark #15310: loop was not vectorized: operation cannot be vectorized   [ ssymm_8192_16x16_malloc_pluto_init_comment.c(133,17) ]
                  remark #25439: unrolled with remainder by 2  
               LOOP END

               LOOP BEGIN at ssymm_8192_16x16_malloc_pluto_init_comment.c(132,15)
               <Remainder>
               LOOP END
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================
