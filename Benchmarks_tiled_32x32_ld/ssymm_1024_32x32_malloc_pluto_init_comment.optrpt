Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

  WHOLE PROGRAM (SAFE) [EITHER METHOD]: false
  WHOLE PROGRAM (SEEN) [TABLE METHOD]: true
  WHOLE PROGRAM (READ) [OBJECT READER METHOD]: false

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 0 (user-specified)
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000

In the inlining report below:
   "sz" refers to the "size" of the routine. The smaller a routine's size,
      the more likely it is to be inlined.
   "isz" refers to the "inlined size" of the routine. This is the amount
      the calling routine will grow if the called routine is inlined into it.
      The compiler generally limits the amount a routine can grow by having
      routines inlined into it.

Begin optimization report for: main()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (main()) [1/1=100.0%] ssymm_1024_32x32_malloc_pluto_init_comment.c(39,1)
  -> EXTERN: (47,1) printf(const char *__restrict__, ...)
  -> EXTERN: (50,20) malloc(size_t)
  -> EXTERN: (51,20) memalign(size_t, size_t)
  -> EXTERN: (57,20) malloc(size_t)
  -> EXTERN: (58,20) memalign(size_t, size_t)
  -> EXTERN: (63,21) malloc(size_t)
  -> EXTERN: (64,20) memalign(size_t, size_t)
  -> EXTERN: (70,1) printf(const char *__restrict__, ...)
  -> EXTERN: (95,9) floor(double)
  -> EXTERN: (98,21) floor(double)
  -> EXTERN: (98,21) floor(double)
  -> EXTERN: (99,23) floor(double)
  -> EXTERN: (99,23) floor(double)
  -> EXTERN: (112,7) floor(double)
  -> EXTERN: (115,19) floor(double)
  -> EXTERN: (115,19) floor(double)
  -> EXTERN: (129,9) floor(double)
  -> EXTERN: (132,21) floor(double)
  -> EXTERN: (132,21) floor(double)
  -> EXTERN: (133,24) floor(double)
  -> EXTERN: (133,24) floor(double)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at ssymm_1024_32x32_malloc_pluto_init_comment.c(52,1)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between a line 54 and a line 54
   remark #15346: vector dependence: assumed ANTI dependence between a line 54 and a line 54
   remark #25438: unrolled without remainder by 2  
LOOP END

LOOP BEGIN at ssymm_1024_32x32_malloc_pluto_init_comment.c(52,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25438: unrolled without remainder by 2  
LOOP END

LOOP BEGIN at ssymm_1024_32x32_malloc_pluto_init_comment.c(59,1)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between b line 61 and b line 61
   remark #15346: vector dependence: assumed ANTI dependence between b line 61 and b line 61
   remark #25438: unrolled without remainder by 2  
LOOP END

LOOP BEGIN at ssymm_1024_32x32_malloc_pluto_init_comment.c(59,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25438: unrolled without remainder by 2  
LOOP END

LOOP BEGIN at ssymm_1024_32x32_malloc_pluto_init_comment.c(65,1)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between c line 67 and c line 67
   remark #15346: vector dependence: assumed ANTI dependence between c line 67 and c line 67
   remark #25438: unrolled without remainder by 2  
LOOP END

LOOP BEGIN at ssymm_1024_32x32_malloc_pluto_init_comment.c(65,1)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25438: unrolled without remainder by 2  
LOOP END

LOOP BEGIN at ssymm_1024_32x32_malloc_pluto_init_comment.c(97,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between c line 103 and c line 103
   remark #15346: vector dependence: assumed OUTPUT dependence between c line 103 and c line 103

   LOOP BEGIN at ssymm_1024_32x32_malloc_pluto_init_comment.c(98,21)
      remark #15523: loop was not vectorized: loop control variable t3 was found, but loop iteration count cannot be computed before executing the loop

      LOOP BEGIN at ssymm_1024_32x32_malloc_pluto_init_comment.c(99,49)
         remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form

         LOOP BEGIN at ssymm_1024_32x32_malloc_pluto_init_comment.c(100,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed OUTPUT dependence between c line 103 and c line 103
            remark #15346: vector dependence: assumed OUTPUT dependence between c line 103 and c line 103

            LOOP BEGIN at ssymm_1024_32x32_malloc_pluto_init_comment.c(101,13)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization
               remark #15346: vector dependence: assumed OUTPUT dependence between c line 103 and c line 103
               remark #15346: vector dependence: assumed OUTPUT dependence between c line 103 and c line 103

               LOOP BEGIN at ssymm_1024_32x32_malloc_pluto_init_comment.c(102,15)
                  remark #15310: loop was not vectorized: operation cannot be vectorized   [ ssymm_1024_32x32_malloc_pluto_init_comment.c(103,17) ]
                  remark #25439: unrolled with remainder by 2  
               LOOP END

               LOOP BEGIN at ssymm_1024_32x32_malloc_pluto_init_comment.c(102,15)
               <Remainder>
               LOOP END
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ssymm_1024_32x32_malloc_pluto_init_comment.c(114,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between c line 122 and c line 122
   remark #15346: vector dependence: assumed OUTPUT dependence between c line 122 and c line 122

   LOOP BEGIN at ssymm_1024_32x32_malloc_pluto_init_comment.c(115,19)
      remark #15523: loop was not vectorized: loop control variable t3 was found, but loop iteration count cannot be computed before executing the loop

      LOOP BEGIN at ssymm_1024_32x32_malloc_pluto_init_comment.c(116,7)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between t4 line 116 and t4 line 122
         remark #15346: vector dependence: assumed ANTI dependence between t4 line 122 and t4 line 116
         remark #15346: vector dependence: assumed FLOW dependence between t4 line 116 and t4 line 122
         remark #15346: vector dependence: assumed ANTI dependence between t4 line 122 and t4 line 116
         remark #15346: vector dependence: assumed FLOW dependence between t4 line 116 and t4 line 122
         remark #15346: vector dependence: assumed ANTI dependence between t4 line 122 and t4 line 116
         remark #15346: vector dependence: assumed ANTI dependence between t4 line 122 and t4 line 116
         remark #15346: vector dependence: assumed FLOW dependence between t4 line 116 and t4 line 122
         remark #15346: vector dependence: assumed ANTI dependence between t4 line 122 and t4 line 116
         remark #15346: vector dependence: assumed FLOW dependence between t4 line 116 and t4 line 122
         remark #15346: vector dependence: assumed ANTI dependence between t4 line 122 and t4 line 116
         remark #15346: vector dependence: assumed FLOW dependence between t4 line 116 and t4 line 122

         LOOP BEGIN at ssymm_1024_32x32_malloc_pluto_init_comment.c(121,9)
            remark #15310: loop was not vectorized: operation cannot be vectorized   [ ssymm_1024_32x32_malloc_pluto_init_comment.c(122,11) ]
            remark #25439: unrolled with remainder by 4  
         LOOP END

         LOOP BEGIN at ssymm_1024_32x32_malloc_pluto_init_comment.c(121,9)
         <Remainder>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ssymm_1024_32x32_malloc_pluto_init_comment.c(131,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between c line 141 and c line 141
   remark #15346: vector dependence: assumed OUTPUT dependence between c line 141 and c line 141

   LOOP BEGIN at ssymm_1024_32x32_malloc_pluto_init_comment.c(132,21)
      remark #15523: loop was not vectorized: loop control variable t3 was found, but loop iteration count cannot be computed before executing the loop

      LOOP BEGIN at ssymm_1024_32x32_malloc_pluto_init_comment.c(133,24)
         remark #15523: loop was not vectorized: loop control variable t4 was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at ssymm_1024_32x32_malloc_pluto_init_comment.c(134,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed FLOW dependence between t5 line 134 and t5 line 141
            remark #15346: vector dependence: assumed ANTI dependence between t5 line 141 and t5 line 134
            remark #15346: vector dependence: assumed FLOW dependence between t5 line 134 and t5 line 141
            remark #15346: vector dependence: assumed ANTI dependence between t5 line 141 and t5 line 134
            remark #15346: vector dependence: assumed FLOW dependence between t5 line 134 and t5 line 141
            remark #15346: vector dependence: assumed ANTI dependence between t5 line 141 and t5 line 134
            remark #15346: vector dependence: assumed ANTI dependence between t5 line 141 and t5 line 134
            remark #15346: vector dependence: assumed FLOW dependence between t5 line 134 and t5 line 141
            remark #15346: vector dependence: assumed ANTI dependence between t5 line 141 and t5 line 134
            remark #15346: vector dependence: assumed FLOW dependence between t5 line 134 and t5 line 141
            remark #15346: vector dependence: assumed ANTI dependence between t5 line 141 and t5 line 134
            remark #15346: vector dependence: assumed FLOW dependence between t5 line 134 and t5 line 141

            LOOP BEGIN at ssymm_1024_32x32_malloc_pluto_init_comment.c(135,13)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization
               remark #15346: vector dependence: assumed OUTPUT dependence between c line 141 and c line 141
               remark #15346: vector dependence: assumed OUTPUT dependence between c line 141 and c line 141

               LOOP BEGIN at ssymm_1024_32x32_malloc_pluto_init_comment.c(140,15)
                  remark #15310: loop was not vectorized: operation cannot be vectorized   [ ssymm_1024_32x32_malloc_pluto_init_comment.c(141,17) ]
                  remark #25439: unrolled with remainder by 2  
               LOOP END

               LOOP BEGIN at ssymm_1024_32x32_malloc_pluto_init_comment.c(140,15)
               <Remainder>
               LOOP END
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================
